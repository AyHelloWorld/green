Version ? - ?

User Stuff

- Django...
- Switched from using stderr to stdout.  This makes piping output to another
program much easier, and reserves stderr for actual errors running green
itself.
- Improved the exception output when a test module cannot be imported.

Internal Stuff

- Updated the Travis config to make use of the Makefile
- Updated the Makefile with more and better organized test targets.
- Added a test_versions script that can be run on developer clones.  It will
auto-detect all versions of python (in the form of pythonX.Y) in $PATH and run
many permutations of self tests on each version.
- Fixed a crash that could occur if discovery did not find any tests and
subprocesses was set higher than one.
- Fixed lots of tests so that they would succeed in all environments.
- Internal refactoring of argument parsing and configuration handling.


Version 1.3.1 - 23 July 2014

- Fixed the new tests that failed if you ran them in-place on an installed
version of green.  Forgot to check the build status before I did the last
release!


Version 1.3.0 - 23 July 2014

- Bash-completion and ZSH-completion support for options and test targets.
Issue #7.


Version 1.2.1 - 20 July 2014

- Multiline docstrings (with -vv or -vvv) on test methods are now handled
correctly.  Initial whitespace is first stripped.  Then lines are combined
into one space-separated string until the first blank line.  Issue #26.


Version 1.2.0 - 20 July 2014

- Implemented custom test discovery code instead of relying on built-in
unittest.discover(). So far, the new implementation  mimics the built-in
behavior except for fixing issue #14 (which unblocks #7).  This enables
working on #25 and any other bugs or behavior that was locked inside of
unittest's quirky discovery implementation that we want to fix in the future.
- Fixed travis config to exclude the example project in builds.
- Reduced debug timestamp precision from microsecond- to second-based.
- Exclude colorama from coverage reporting for the sake of Windows users.
- Added some additional internal debug output.
- Centralized internal debugging output.
- "make clean" now cleans all .coverage* files in the project tree.
- Many new internal tests.


Version 1.1.0 - 17 July 2014

- Configuration file support, originally contributed by Tom Barron - Issues
#20, #23, #24


Version 1.0.2 - 6 July 2014

- Color works on Windows - Issues #18, #19
- Self-tests run against installed versions automatically - Issue #10
- Installation process is now tested automatically - Issue #9
- Switched to "branch-based development"
- Added an "example" directory with an example project with unit tests
- Added the CHANGELOG (this file)
- Improved the README.md file a lot based on feedback from reddit.


Version 1.0.1 - 23 June 2014

- Fixed MANIFEST so that installation didn't crash


Version 1.0 - 22 June 2014

Features:

- Colorful - Terminal output makes good use of color when the terminal supports it.
- Clean - Low redundancy in output. Result stats for each test is lined up in a vertical column.
- Fast - Can run tests in independent subprocesses.
- Powerful - Multi-target + auto-discovery.
- Traditional - Use the normal `unittest` classes and methods for your unit tests.
- Descriptive - Four verbosity levels, from just dots to full docstring output.
- Thorough - Built-in, optional integration with coverage
- Modern - Supports Python 2.7, 3.3, 3.4, and PyPy
- Portable - Completely supports OS X, Linux, and BSDs (and maybe Windows).
- Flexible - Optional HTML output.


Version (everything before 1.0)

- There were lots of versions before 1.0 was released (54 published releases,
actually).  No one heard about it before 1.0 though, so we didn't bother
tracking individual releases.
